'''
import matplotlib
from pandasai import SmartDataframe
import pandas as pd
import os
from dotenv import load_dotenv
import matplotlib.pyplot as plt
import streamlit as st
f  # rom pandasai.llm.openai import OpenAI
# from pandasai import PandasAI
matplotlib.use('TkAgg')

load_dotenv()

API_KEY = st.secrets['OPENAI_API_KEY']


def chat_with_csv(df, prompt):
    llm = OpenAI(api_token=API_KEY)
    pandas_ai = SmartDataframe(df, config={"llm": llm})
    # pandas_ai = PandasAI(llm, save_charts=True)
    result = pandas_ai.chat(prompt)
    # result = pandas_ai.run(df,prompt=prompt)
    return result


st.header("Multiple-CSV ChatApp powered by LLM")
st.markdown(
    '<style>h1{color: orange; text-align: center;}</style>', unsafe_allow_html=True)
st.markdown(
    '<style>h3{color: pink;  text-align: center;}</style>', unsafe_allow_html=True)

# Upload multiple CSV files
input_csvs = st.sidebar.file_uploader("Upload your CSV files", type=[
                                      'csv'], accept_multiple_files=True)

if input_csvs:
    # Select a CSV file from the uploaded files using a dropdown menu
    selected_file = st.selectbox(
        "Select a CSV file", [file.name for file in input_csvs])
    selected_index = [file.name for file in input_csvs].index(selected_file)

    # load and display the selected csv file
    st.info("CSV uploaded successfully")
    data = pd.read_csv(input_csvs[selected_index], sep=";", low_memory=False)
    # st.dataframe(data, use_container_width=True)
    st.write(data.head(5))
    # Enter the query for analysis
    # st.info("Chat Below")
    input_text = st.text_area("Escriba su consulta")

    # Perform analysis
    if st.button("Generar respuesta"):
        if input_text:
            # st.info("Your Query: " + input_text)
            with st.spinner("Generando respuesta... por favor espere."):
                result = chat_with_csv(data, input_text)
                fig_number = plt.get_fignums()
                if fig_number:
                    st.pyplot(plt.gcf())
                else:
                    st.success(result)
        else:
            st.warning("Por favor ingrese una consulta")
